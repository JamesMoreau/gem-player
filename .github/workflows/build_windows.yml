name: Build Windows

permissions:
  contents: read
  pull-requests: write

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Get Metadata
        id: metadata
        uses: nicolaiunrein/cargo-get@master

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-bundle
        run: cargo install cargo-bundle

      - name: Build release app bundle
        run: cargo bundle --release

      - name: foo
        run: |
          ls target/release
          ls target/release/bundle
          ls target/release/bundle/msi

      - name: Rename Installer
        run: |
          mv "target/release/bundle/osx/gem-player.dmg" \
            "target/release/bundle/osx/gem_player_${{ steps.metadata.outputs.package_version }}_macos_arm64.dmg"

      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: gem_player-${{ steps.metadata.outputs.package_version }}-windows-x64
          path: target/release/installer/gem_player-${{ steps.metadata.outputs.package_version }}-windows-x64.exe

# - name: Build release binary
#   run: cargo build --release

# - name: Install Inno Setup
#   run: choco install innosetup --yes

# - name: Prepare installer folder
#   run: mkdir -p target/release/installer

# - name: Run Inno Setup Compiler
#   run: |
#     iscc "windows_installer.iss" `
#       /DAppVersion=${{ steps.metadata.outputs.package_version }} `
#       /DExePath="target/release/${{ steps.metadata.outputs.package_name }}.exe" `
#       /O"target/release/installer" `
#       /F"gem_player-${{ steps.metadata.outputs.package_version }}-windows-x64"