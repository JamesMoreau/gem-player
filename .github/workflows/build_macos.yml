name: Build macOS

permissions:
  contents: read
  pull-requests: write

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build-macos:
    runs-on: macos-latest
    env:
      BUILD_NAME: "gem_player"        # file-safe artifact name
      BUNDLE_NAME: "Gem Player"       # .app folder name and DMG volume
      PACKAGE_NAME: "gem-player"      # Cargo package name

    steps:
      - uses: actions/checkout@v4

      - name: Get Metadata
        id: metadata
        uses: nicolaiunrein/cargo-get@master

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-bundle and create-dmg
        run: |
          cargo install cargo-bundle
          brew install create-dmg

      - name: Build release app bundle
        run: cargo bundle --release

      - name: Import Code Signing Certificate
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.APPSTORE_CERTIFICATES_FILE_BASE64 }}
          p12-password: ${{ secrets.APPSTORE_CERTIFICATES_PASSWORD }}

      - name: Codesign app bundle
        run: |
          codesign --force --deep --options runtime \
            --sign "${{ secrets.APPLE_SIGNING_ID }}" \
            "target/release/bundle/osx/${BUNDLE_NAME}.app"

      - name: Create DMG
        run: |
          create-dmg \
            --volname "${BUNDLE_NAME} Installer" \
            --app-drop-link 0 0 \
            --codesign "${{ secrets.APPLE_SIGNING_ID }}" \
            "target/release/bundle/osx/${BUILD_NAME}.dmg" \
            "target/release/bundle/osx/${BUNDLE_NAME}.app"

          mv "target/release/bundle/osx/${BUILD_NAME}.dmg" \
             "target/release/bundle/osx/${BUILD_NAME}_${{ steps.metadata.outputs.package_version }}_macos.dmg"

      - name: Decode App Store Connect API key
        run: |
          printf "%s" "${{ secrets.APPLE_API_KEY_FILE_BASE64 }}" | base64 --decode > AuthKey.p8

      - name: Notarize app
        run: |
          xcrun notarytool submit "target/release/bundle/osx/${BUILD_NAME}_${{ steps.metadata.outputs.package_version }}_macos.dmg" \
            --issuer "${{ secrets.APPLE_API_ISSUER_ID }}" \
            --key-id "${{ secrets.APPLE_API_KEY_ID }}" \
            --key AuthKey.p8 \
            --wait

      - name: Staple notarization
        run: |
          xcrun stapler staple "target/release/bundle/osx/${BUNDLE_NAME}.app"
          xcrun stapler staple "target/release/bundle/osx/${BUILD_NAME}_${{ steps.metadata.outputs.package_version }}_macos.dmg"

      - name: Verify
        run: spctl --assess --type execute --verbose "target/release/bundle/osx/${BUNDLE_NAME}.app"

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.BUILD_NAME }}_${{ steps.metadata.outputs.package_version }}_macos"
          path: "target/release/bundle/osx/${{ env.BUILD_NAME }}_${{ steps.metadata.outputs.package_version }}_macos.dmg"
